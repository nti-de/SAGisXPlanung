"""v1.8.0

Revision ID: 812b33dce3d1
Revises: 1a015621a38f
Create Date: 2022-12-02 09:20:54.695508

"""
import os
import sys

from alembic import op
import sqlalchemy as sa

from geoalchemy2 import Geometry
from sqlalchemy.dialects import postgresql

PROJECT_PATH = os.getcwd()
SOURCE_PATH = os.path.join(
    PROJECT_PATH, "src"
)
sys.path.append(SOURCE_PATH)

# revision identifiers, used by Alembic.
revision = '812b33dce3d1'
down_revision = '1a015621a38f'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_geospatial_table('so_objekt',
                               sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
                               sa.Column('rechtscharakter',
                                         sa.Enum('FestsetzungBPlan', 'DarstellungFPlan', 'InhaltLPlan',
                                                 'NachrichtlicheUebernahme', 'Hinweis', 'Vermerk', 'Kennzeichnung',
                                                 'Unbekannt', 'Sonstiges', name='so_rechtscharakter'), nullable=False),
                               sa.Column('position',
                                         Geometry(spatial_index=False, from_text='ST_GeomFromEWKT', name='geometry'),
                                         nullable=True),
                               sa.Column('flaechenschluss', sa.Boolean(), nullable=True),
                               sa.Column('flussrichtung', sa.Boolean(), nullable=True),
                               sa.Column('nordwinkel', sa.Integer(), nullable=True),
                               sa.ForeignKeyConstraint(['id'], ['xp_objekt.id'], ondelete='CASCADE'),
                               sa.PrimaryKeyConstraint('id')
                               )
    op.create_geospatial_index('idx_so_objekt_position', 'so_objekt', ['position'], unique=False,
                               postgresql_using='gist', postgresql_ops={})
    op.create_table('so_denkmalschutz',
                    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
                    sa.Column('artDerFestlegung',
                              sa.Enum('DenkmalschutzEnsemble', 'DenkmalschutzEinzelanlage', 'Grabungsschutzgebiet',
                                      'PufferzoneWeltkulturerbeEnger', 'PufferzoneWeltkulturerbeWeiter',
                                      'ArcheologischesDenkmal', 'Bodendenkmal', 'Sonstiges',
                                      name='so_klassifiznachdenkmalschutzrecht'), nullable=True),
                    sa.Column('weltkulturerbe', sa.Boolean(), nullable=True),
                    sa.Column('name', sa.String(), nullable=True),
                    sa.Column('nummer', sa.String(), nullable=True),
                    sa.ForeignKeyConstraint(['id'], ['so_objekt.id'], ondelete='CASCADE'),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('so_schienenverkehr',
                    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
                    sa.Column('artDerFestlegung',
                              sa.Enum('Bahnanlage', 'DB_Bahnanlage', 'Personenbahnhof', 'Fernbahnhof', 'Gueterbahnhof',
                                      'Bahnlinie', 'Personenbahnlinie', 'Regionalbahn', 'Kleinbahn', 'Gueterbahnlinie',
                                      'WerksHafenbahn', 'Seilbahn', 'OEPNV', 'Strassenbahn', 'UBahn', 'SBahn',
                                      'OEPNV_Haltestelle', 'Sonstiges', name='so_klassifiznachschienenverkehrsrecht'),
                              nullable=True),
                    sa.Column('name', sa.String(), nullable=True),
                    sa.Column('nummer', sa.String(), nullable=True),
                    sa.ForeignKeyConstraint(['id'], ['so_objekt.id'], ondelete='CASCADE'),
                    sa.PrimaryKeyConstraint('id')
                    )

    op.create_table('so_wasserschutz',
                    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
                    sa.Column('artDerFestlegung', sa.Enum('Wasserschutzgebiet', 'QuellGrundwasserSchutzgebiet',
                                                          'OberflaechengewaesserSchutzgebiet',
                                                          'Heilquellenschutzgebiet', 'Sonstiges',
                                                          name='so_klassifizschutzgebietwasserrecht'), nullable=True),
                    sa.Column('zone', sa.Enum('Zone_1', 'Zone_2', 'Zone_3', 'Zone_3a', 'Zone_3b', 'Zone_4',
                                              name='so_schutzzonenwasserrecht'), nullable=True),
                    sa.Column('name', sa.String(), nullable=True),
                    sa.Column('nummer', sa.String(), nullable=True),
                    sa.ForeignKeyConstraint(['id'], ['so_objekt.id'], ondelete='CASCADE'),
                    sa.PrimaryKeyConstraint('id')
                    )

    op.execute(
        "UPDATE bp_baugebiet SET sondernutzung=NULL WHERE sondernutzung='KeineSondernutzung'::xp_sondernutzungen;")
    op.execute(
        "ALTER TABLE bp_baugebiet ALTER sondernutzung DROP DEFAULT, ALTER sondernutzung type xp_sondernutzungen[] using NULLIF(ARRAY[sondernutzung], '{null}'), alter sondernutzung set default '{}';")

    op.execute(
        "UPDATE xp_ppo SET symbol_path = replace(symbol_path, 'BP_Naturschutz_Landschaft', 'BP_Naturschutz_Landschaftsbild_Naturhaushalt');")
    op.execute(
        "UPDATE xp_ppo SET symbol_path = replace(symbol_path, 'BP_GruenFlaeche', 'BP_Landwirtschaft_Wald_und_Gruenflaechen');")
    op.execute(
        "UPDATE xp_ppo SET symbol_path = replace(symbol_path, 'BP_WaldFlaeche', 'BP_Landwirtschaft_Wald_und_Gruenflaechen');")
    op.execute(
        "UPDATE xp_ppo SET symbol_path = replace(symbol_path, 'BP_GemeinbedarfsFlaeche', 'BP_Gemeinbedarf_Spiel_und_Sportanlagen');")
    op.execute(
        "UPDATE xp_ppo SET symbol_path = replace(symbol_path, 'BP_Erhaltungssatzung_und_Denkmalschutz', 'SO_SonstigeGebiete');")
    op.execute(
        "UPDATE xp_ppo SET symbol_path = replace(symbol_path, 'BP_VerEntsorgung', 'BP_Ver_und_Entsorgung');")
    op.execute(
        "UPDATE xp_ppo SET symbol_path = replace(symbol_path, 'BP_SpielSportanlagenFlaeche', 'BP_Gemeinbedarf_Spiel_und_Sportanlagen');")
    # ### end Alembic commands ###


def downgrade():
    op.execute(
        "DELETE FROM xp_objekt CASCADE WHERE type in ('so_schienenverkehr', 'so_denkmalschutz', 'so_wasserschutz');")

    op.drop_table('so_schienenverkehr')
    op.drop_table('so_denkmalschutz')
    op.drop_table('so_wasserschutz')
    op.drop_geospatial_index('idx_so_objekt_position', table_name='so_objekt', postgresql_using='gist',
                             column_name='position')
    op.drop_geospatial_table('so_objekt')

    op.execute("DROP TYPE so_klassifiznachschienenverkehrsrecht CASCADE;")
    op.execute("DROP TYPE so_klassifiznachdenkmalschutzrecht CASCADE;")
    op.execute("DROP TYPE so_rechtscharakter CASCADE;")
    op.execute("DROP TYPE so_klassifizschutzgebietwasserrecht CASCADE;")
    op.execute("DROP TYPE so_schutzzonenwasserrecht CASCADE;")

    op.execute(
        "ALTER TABLE bp_baugebiet ALTER sondernutzung DROP DEFAULT, ALTER sondernutzung type xp_sondernutzungen using sondernutzung[1], alter sondernutzung set default NULL;")

    op.execute(
        "UPDATE xp_ppo SET symbol_path = replace(symbol_path, 'BP_Naturschutz_Landschaftsbild_Naturhaushalt', 'BP_Naturschutz_Landschaft');")
    op.execute(
        "UPDATE xp_ppo SET symbol_path = replace(symbol_path, 'BP_Landwirtschaft_Wald_und_Gruenflaechen', 'BP_WaldFlaeche') "
        "WHERE position('Erholungswald' IN symbol_path) > 0;")
    op.execute(
        "UPDATE xp_ppo SET symbol_path = replace(symbol_path, 'BP_Landwirtschaft_Wald_und_Gruenflaechen', 'BP_GruenFlaeche');")
    op.execute(
        "UPDATE xp_ppo SET symbol_path = replace(symbol_path, 'BP_Gemeinbedarf_Spiel_und_Sportanlagen', 'BP_SpielSportanlagenFlaeche') "
        "WHERE position('Anlage_Spielanlage' IN symbol_path) > 0 OR position('Anlage_Sportanlage' IN symbol_path) > 0;")
    op.execute(
        "UPDATE xp_ppo SET symbol_path = replace(symbol_path, 'BP_Gemeinbedarf_Spiel_und_Sportanlagen', 'BP_GemeinbedarfsFlaeche');")
    op.execute(
        "UPDATE xp_ppo SET symbol_path = replace(symbol_path, 'SO_SonstigeGebiete', 'BP_Erhaltungssatzung_und_Denkmalschutz');")
    op.execute(
        "UPDATE xp_ppo SET symbol_path = replace(symbol_path, 'BP_Ver_und_Entsorgung', 'BP_VerEntsorgung');")
    # ### end Alembic commands ###
