name: Release

on:
  push:
    tags:
    - 'v*'

jobs:
  build:
    runs-on: windows-latest
    outputs:
      upload_url: ${{ steps.create-release.outputs.upload_url }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get Version Number
        id: get_version_number
        run: echo "VERSION=${GITHUB_REF/refs\/tags\//}" >> $GITHUB_OUTPUT
        shell: bash

      - name: Pack Assets
        id: pack_assets
        run: |
          Compress-Archive .\SAGisXPlanung SAGis.XPlanung_${{ steps.get_version_number.outputs.VERSION }}.zip
        working-directory: src

      - name: Create Installer
        id: create_installer
        run: |
          Copy-Item -Path "..\src\SAGisXPlanung" -Destination . -Recurse

          python3 -m pip download sqlalchemy==1.4.46 GeoAlchemy2 qasync shapely==2.0.0 lxml asyncpg --dest dependencies

          iscc.exe /DSAGIS_VERSION=${{ steps.get_version_number.outputs.VERSION }} "setup.iss"
          iscc.exe /DSAGIS_VERSION=${{ steps.get_version_number.outputs.VERSION }} /DWITH_CIVIL_IMPORT "setup.iss"
        working-directory: installer

      - name: Create Release
        id: create-release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref }}
          name: Release ${{ steps.get_version_number.outputs.VERSION }}
          body: ""
          prerelease: false
          files: |
            src/SAGis.XPlanung_${{ steps.get_version_number.outputs.VERSION }}.zip
            installer/Output/*.exe
  
  alembic-revision:
    name: Generate SQL Scripts
    needs: [build]
    runs-on: ubuntu-latest

    container: 'qgis/qgis:release-3_28'

    steps:
    - name: Checkout Project
      uses: actions/checkout@v4

    - name: Install dependencies
      run: |
        python3 -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install alembic alembic-postgresql-enum

    - name: Parse Alembic History
      id: alembic_history
      run: |
        prev_revision=`alembic history | head -n1 | awk '{print $1}'`
        revision_tag=`alembic history | head -n1 | awk '{print $NF}'`
        prev_tag=`alembic history | head -n2 | tail -n1 | awk '{print $NF}'`
        echo "prev_revision=$prev_revision" >> $GITHUB_OUTPUT
        echo "revision_tag=$revision_tag" >> $GITHUB_OUTPUT
        echo "prev_tag=$prev_tag" >> $GITHUB_OUTPUT

    - name: Generate Revisions
      run: |
        alembic upgrade head --sql > create_${{steps.alembic_history.outputs.revision_tag}}.sql
        alembic downgrade head:${{steps.alembic_history.outputs.prev_revision}} --sql > downgrade_to_${{steps.alembic_history.outputs.prev_tag}}.sql
        alembic upgrade ${{steps.alembic_history.outputs.prev_revision}}:head --sql > upgrade_from_${{steps.alembic_history.outputs.prev_tag}}.sql     

    - name: Package Files
      run: |
        apt-get install zip
        zip -R sql_scripts.zip *.sql

    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.build.outputs.upload_url }} 
        asset_path: ./sql_scripts.zip
        asset_name: sql_scripts.zip
        asset_content_type: application/zip
